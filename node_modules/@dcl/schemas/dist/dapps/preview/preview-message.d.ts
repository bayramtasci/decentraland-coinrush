import { JSONSchema, ValidateFunction } from '../../validation';
import { PreviewOptions } from './preview-options';
export declare enum PreviewMessageType {
    READY = "ready",
    LOAD = "load",
    ERROR = "error",
    UPDATE = "update"
}
/** @alpha */
export declare namespace PreviewMessageType {
    const schema: JSONSchema<PreviewMessageType>;
    const validate: ValidateFunction<PreviewMessageType>;
}
export declare type PreviewMessagePayload<T extends PreviewMessageType> = T extends PreviewMessageType.LOAD ? null : T extends PreviewMessageType.ERROR ? {
    message: string;
} : T extends PreviewMessageType.UPDATE ? {
    options: PreviewOptions;
} : unknown;
export declare const sendMessage: <T extends PreviewMessageType>(window: Window, type: T, payload: PreviewMessagePayload<T>, targetOrigin?: string) => void;
//# sourceMappingURL=preview-message.d.ts.map